# -*- coding: utf-8 -*-
"""Proje-2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SlspbgsElXl6-a6NYotZix8IXZAYkm6Y

#**Netflix Original Films & IMDB Scores - EDA**


This dataset consists of all Netflix original films released as of June 1st, 2021. Additionally, it also includes all Netflix documentaries and specials. The data was webscraped off of this Wikipedia page, which was then integrated with a dataset consisting of all of their corresponding IMDB scores. IMDB scores are voted on by community members, and the majority of the films have 1,000+ reviews.

You dataset available on [Kaggle.](https://www.kaggle.com/datasets/luiscorter/netflix-original-films-imdb-scores)

Dataset consist of:


*   Title
*   Genre
*   Premiere date
*   Runtime 
*   IMDB scores
*   Languages



## This colab notebooks cover this guestion:

1.   [In which language were the long-running films created according to the dataset? Make a visualization.](#Question1)
2.   [Find and visualize the IMDB values of the movies shot in the 'Documentary' genre between January 2019 and June 2020.](#Question2)
3.   [Which genre has the highest IMDB rating among movies shot in English?](#Question3)
4.   [What is the average 'runtime' of movies shot in 'Hindi'?](#Question4)
5.   [How many categories does the Genre Column have and what are they? Visualize it.](#Question5)
6.   [Find the 3 most used languages in the movies in the data set.](#Question6)
7.   [Top 10 Movies With IMDB Ratings](#Question7)
8.   [What is the correlation between IMDB score and 'Runtime'? Examine and visualize.](#Question8)
9.   [Top 10 Genre by IMDB Score](#Question9)
10.  [What are the top 10 movies with the highest 'runtime'? Visualize it.](#Question10)
11.  [In which year was the most movies released? Visualize it.](#Question11)
12.  [Which language movies have the lowest average IMDB rating? Visualize it.](#Question12)
13.  [Which year has the greatest total runtime?](#Question13)
14.  [What is the "Genre" where each language is used the most?](#Question14)
15.  [Is there any outlier data in the data set? Please explain.](#Question15)
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

df = pd.read_csv("/content/drive/MyDrive/GLOBAL - Bootcamp/NetflixOriginals.csv",encoding = "ISO-8859-1")
df

df.describe()

df.isnull().sum()

df['Premiere'] = pd.to_datetime(df['Premiere'])

# columns year, month and weekday
df['year']    = df['Premiere'].dt.year
df['month']   = df['Premiere'].dt.month_name()
df['weekday'] = df['Premiere'].dt.day_name()


df.head()

"""<a name="Question1"></a>
###**1-In which language were the long-running films created according to the dataset? Make a visualization.**
"""

df_temp=df.groupby(['Runtime','Title','Language']).mean().sort_values(by='Runtime', ascending=False).reset_index().iloc[:,:3]
#df_temp

fig = px.box(df, x= 'Runtime', hover_data = df[['Title','Language']])
fig.update_traces(quartilemethod="inclusive")
fig.show()

"""<a name="Question2"></a>
### **2-Find and visualize the IMDB values of the movies shot in the 'Documentary' genre between January 2019 and June 2020.**
"""

df_doc = df[ ((df["year"]== 2019) |
              ((df["year"]== 2020) & ((df["month"] ==("January"))| (df["month"] ==("February"))| (df["month"] ==("March"))| (df["month"] ==("April")) | (df["month"] ==("May")) | (df["month"] ==("June")))) ) 
              & (df["Genre"]== "Documentary")  ]
#df_doc

fig = px.scatter(df_doc, x='year', y='IMDB Score',color="month")
fig.update_traces(marker_size=10)
fig.show()

"""<a name="Question3"></a>
### **3-Which genre has the highest IMDB rating among movies shot in English?**
"""

top_imdb_english = df[df['Language'] == "English"]
top_imdb_english = top_imdb_english.groupby(['Language','Genre','Title']).mean().sort_values(by=["IMDB Score"],ascending=False)[:10]
top_imdb_english

"""<a name="Question4"></a>
### **4-What is the average 'runtime' of movies shot in 'Hindi'?**
"""

df_hindi = df[df["Language"] == "Hindi"]
df_hindi.Runtime.value_counts()
df_hindi.Runtime.mean()

"""<a name="Question5"></a>
### **5-How many categories does the Genre Column have and what are they? Visualize it.**
"""

df['Genre'].value_counts()

df['Genre'].value_counts().sum()

genre =df['Genre'].value_counts()

fig = px.bar(genre, x= genre.index, y=genre.values, labels={'y':'Number of Movies from the Genre', 'index':'Genres'})
fig.update_layout(xaxis={'categoryorder':'total descending'})
fig.show()

"""<a name="Question6"></a>
### **6-Find the 3 most used languages in the movies in the data set.**
"""

# printing unique values of Language
df.Language.unique()

df.Language.value_counts()

df_top_lang = df.Language.value_counts().nlargest(3)

# plotting a bar graph for better visualisation
plt.figure(figsize=(12,8))
sns.barplot(x=df_top_lang.index,y=df_top_lang.values,data=df,color='blue')
plt.xlabel('Top 3 Languages in Movies')
plt.xticks(rotation=90)
plt.ylabel('Number')
plt.show()

"""<a name="Question7"></a>
### **7- Top 10 Movies With IMDB Ratings**
"""

df_temp=df.sort_values(by='IMDB Score', ascending=False).reset_index().iloc[:13,:]

fig, ax = plt.subplots(1,1, figsize = (15, 6), constrained_layout = True)
ax = sns.barplot(x = 'Title', y = 'IMDB Score', data = df_temp, hue = 'Genre')

for i in ax.patches:    
    ax.text(x = i.get_x() + i.get_width()/2, y = i.get_height()+0.1,
            s = f"{i.get_height()}", 
            ha = 'center', size = 14, weight = 'bold', rotation = 0, color = 'white',
            bbox=dict(boxstyle="circle,pad=0.5", fc='lightblue', ec="lightblue", lw=2))


ax.set_xlabel('Title', fontsize=14)
ax.set_ylabel('Average IMDB Score', fontsize=14)
ax.set_xticklabels([i[:15] for i in df_temp['Title'].unique()], fontsize=12, rotation = -30)
plt.title('Top 10 movies by IMDB Score', fontsize=16)
plt.legend(title='Gerne', bbox_to_anchor=(1.05, 1), loc='upper left');

"""<a name="Question8"></a>
### **8-What is the correlation between IMDB score and 'Runtime'? Examine and visualize.**
"""

df[['IMDB Score','Runtime']].corr()

fig = px.scatter(df, x='IMDB Score', y='Runtime')
fig.show()

"""<a name="Question9"></a>
### **9-Top 10 Genre by IMDB Score**
"""

df_temp=df.groupby(['Genre']).mean(['IMDB rating']).sort_values(by='IMDB Score', ascending=False).reset_index().iloc[:10,:]

fig, ax = plt.subplots(1,1, figsize = (10, 6), constrained_layout = True)
ax = sns.barplot(x = 'Genre', y = 'IMDB Score', data = df_temp, color = 'violet')

for i in ax.patches:    
    ax.text(x = i.get_x() + i.get_width()/2, y = i.get_height()/2,
            s = f"{round(i.get_height(),1)}", 
            ha = 'center', size = 14, weight = 'bold', rotation = 0, color = 'white',
            bbox=dict(boxstyle="round,pad=0.5", fc='pink', ec="pink", lw=2))


ax.set_xlabel('Genre', fontsize=14)
ax.set_ylabel('Average IMDB Score', fontsize=14)
ax.set_xticklabels([i[:15] for i in df_temp['Genre'].unique()], fontsize=12, rotation = -45 )
plt.title('Top 10 Genre by IMDB Score', fontsize=16);

"""<a name="Question10"></a>
### **10-What are the top 10 movies with the highest 'runtime'? Visualize it.**
"""

df_temp=df.groupby(['Title']).mean(['Runtime rating']).sort_values(by='Runtime', ascending=False).reset_index().iloc[:10,:2]

# plotting a bar graph for better visualisation
plt.figure(figsize=(12,8))
sns.barplot(x=df_temp["Title"],y=df_temp["Runtime"],data=df,palette='rainbow')
plt.xlabel('Top 10 Highest Runtime Movies')
plt.xticks(rotation=90)
plt.ylabel('Number')
plt.show()

"""<a name="Question11"></a>
### **11-In which year was the most movies released? Visualize it.**
"""

top_genres = df.loc[df['Genre'].isin(df.groupby('Genre').sum().sort_values(by='IMDB Score', ascending=False).reset_index()['Genre'][:10])].groupby('Genre').mean().sort_values(by='IMDB Score', ascending=False).reset_index()['Genre']
plt.figure(figsize= (10, 6))

sns.countplot(df.loc[df['Genre'].isin(top_genres)]['year'], 
              hue= df.loc[df['Genre'].isin(top_genres)]['Genre'])

plt.title('Released Genre per Year', size= 25)
plt.xlabel(None)
plt.xticks(size= 16)

plt.show()

sns.set(rc={'figure.figsize':(14, 8)})

ax = sns.countplot(df['year'], palette='rainbow')
ax.set_title('Number of new movies per year')
plt.xlabel('Year')
plt.ylabel('Number of movies')
plt.show()

"""<a name="Question12"></a>
### **12-Which language movies have the lowest average IMDB rating? Visualize it.**
"""

df_temp=df.groupby(['Language']).mean(['IMDB rating']).sort_values(by='IMDB Score', ascending=False).reset_index().iloc[:10,:]

fig, ax = plt.subplots(1,1, figsize = (10, 6), constrained_layout = True)
ax = sns.barplot(x = 'Language', y = 'IMDB Score', data = df_temp, color = 'lightblue')

for i in ax.patches:    
    ax.text(x = i.get_x() + i.get_width()/2, y = i.get_height()/2,
            s = f"{round(i.get_height(),1)}", 
            ha = 'center', size = 14, weight = 'bold', rotation = 0, color = 'white',
            bbox=dict(boxstyle="round,pad=0.5", fc='pink', ec="pink", lw=2))


ax.set_xlabel('Language', fontsize=14)
ax.set_ylabel('Average IMDB Score', fontsize=14)
ax.set_xticklabels([i[:15] for i in df_temp['Language'].unique()], fontsize=12, rotation = -45 )
plt.title('Top 10 Language by IMDB Score', fontsize=16);

"""<a name="Question13"></a>
### **13-Which year has the greatest total runtime?**
"""

df_temp=df.groupby(['year']).mean(['Runtime rating']).sort_values(by='Runtime', ascending=False).reset_index().iloc[:10,:2]

# plotting a bar graph for better visualisation
plt.figure(figsize=(12,8))
sns.barplot(x=df_temp["year"],y=df_temp["Runtime"],data=df,palette='rainbow')
plt.xlabel('Top 10 Year - Runtime Movies')
plt.xticks(rotation=90)
plt.ylabel('Runtime')
plt.show()

df_run= df[df["year"] ==2021]
df_run.Runtime.mean()

"""<a name="Question14"></a>
### **14-What is the "Genre" where each language is used the most?**
"""

genre_lang =[]
for i in df.Language.unique():
    df_lang =df[df["Language"]==i]
    df_lang_genre =df_lang.Genre.value_counts().nlargest(1)
    #print(f'*************************************************')
    #print(f'Language: {i}\n', df_lang_genre)
    genre_lang.append((i,df_lang_genre))

df_lang = pd.DataFrame(genre_lang, columns = ['Language', 'Genre'])
df_lang.sort_values(by=['Language'],ignore_index=True)

"""<a name="Question15"></a>
### **15-Is there any outlier data in the data set? Please explain.**

Let's look the Runtime for detecting outlier. We can easily see one outlier with no doubt. The outlier of Runtime column' is "The Irishman"
"""

fig = px.scatter(x=df['Runtime'], y=df['Title'])
fig.show()